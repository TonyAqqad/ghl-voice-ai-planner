services:
  - type: web
    name: ghl-oauth-api
    runtime: node
    buildCommand: |
      set -e
      echo "=== STEP 1: Pre-build verification ==="
      echo "Current directory: $(pwd)"
      echo "Node version: $(node -v)"
      echo "NPM version: $(npm -v)"
      echo ""
      echo "Checking required files:"
      test -f package.json && echo "✅ package.json found" || (echo "❌ package.json missing!" && exit 1)
      test -f vite.config.ts && echo "✅ vite.config.ts found" || (echo "❌ vite.config.ts missing!" && exit 1)
      test -d src && echo "✅ src directory found" || (echo "❌ src directory missing!" && exit 1)
      echo ""
      echo "=== STEP 2: Installing root dependencies ==="
      npm install --production=false || {
        echo "❌ npm install failed!"
        exit 1
      }
      echo ""
      echo "=== STEP 3: Building frontend ==="
      echo "Working directory: $(pwd)"
      echo "Using npx to run vite (fixes permission issues)"
      echo ""
      # Use npx to ensure vite has proper permissions
      npx vite build --mode production 2>&1 || {
        echo ""
        echo "❌ Build failed!"
        echo "Error details above"
        echo ""
        echo "Checking node_modules:"
        ls -la node_modules/.bin/vite 2>/dev/null || echo "vite not found in node_modules/.bin"
        echo ""
        echo "Trying alternative: npm run build"
        npm run build 2>&1 || {
          echo ""
          echo "❌ Alternative build method also failed!"
          echo "Directory contents:"
          ls -la | head -20
          exit 1
        }
      }
      # Verify dist was created
      if [ ! -d "dist" ]; then
        echo ""
        echo "❌ CRITICAL: dist folder was NOT created after build!"
        echo "Directory contents:"
        ls -la
        exit 1
      fi
      if [ ! -f "dist/index.html" ]; then
        echo ""
        echo "❌ CRITICAL: dist/index.html NOT found!"
        echo "Dist contents:"
        ls -la dist/ || echo "Cannot list dist"
        exit 1
      fi
      echo ""
      echo "✅ Build completed successfully!"
      echo ""
      echo "=== STEP 4: Final verification ==="
      echo "Dist location: $(pwd)/dist"
      echo "Dist exists: $([ -d dist ] && echo 'YES' || echo 'NO')"
      echo "index.html exists: $([ -f dist/index.html ] && echo 'YES' || echo 'NO')"
      echo ""
      echo "Creating persistence markers..."
      touch dist/.render-build-complete 2>/dev/null || true
      echo "$(date -u +%Y-%m-%dT%H:%M:%SZ)" > dist/.render-build-timestamp 2>/dev/null || true
      echo ""
      echo "=== STEP 5: Installing server dependencies ==="
      cd server && npm install
    startCommand: cd server && node ghl-express-api.js
    envVars:
      # NOTE: Set these in Render Dashboard Environment tab - NEVER commit secrets here!
      # - key: GHL_CLIENT_ID
      #   value: YOUR_CLIENT_ID
      # - key: GHL_CLIENT_SECRET
      #   value: YOUR_CLIENT_SECRET
      # - key: GHL_SHARED_SECRET
      #   value: YOUR_SHARED_SECRET
      - key: GHL_REDIRECT_URI
        value: https://ghlvoiceai.captureclient.com/auth/callback
      - key: PORT
        value: 10000
      - key: NODE_ENV
        value: production

